version: '3.8'

services:
  database:
    image: postgres:17-alpine
    container_name: postgres_db_service
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-myuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-supersecretpassword}
      POSTGRES_DB: ${DB_NAME:-notizblockdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-myuser} -d ${DB_NAME:-notizblockdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_api_service
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      PORT: ${BACKEND_PORT:-3000}
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: ${DB_USER:-myuser}
      DB_PASSWORD: ${DB_PASSWORD:-supersecretpassword}
      DB_NAME: ${DB_NAME:-notizblockdb}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    expose:
      - "${BACKEND_PORT:-3000}"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    container_name: frontend_web_app
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    ports:
      - "8080:80"

volumes:
  postgres_data:
    driver: local